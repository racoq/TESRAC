/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 15:21:04 GMT 2020
 */

package ch.lambdaj.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.lambdaj.collection.LambdaCollection;
import ch.lambdaj.collection.LambdaMap;
import ch.lambdaj.collection.LambdaSet;
import ch.lambdaj.function.convert.Converter;
import ch.lambdaj.function.convert.PropertyExtractor;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Matcher;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LambdaMap_ESTest extends LambdaMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      lambdaMap0.putAll(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      lambdaMap0.clear();
      assertTrue(lambdaMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      LambdaCollection<Integer> lambdaCollection0 = lambdaMap0.values();
      assertNotNull(lambdaCollection0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      Integer integer0 = new Integer((-1325));
      lambdaMap0.put("", integer0);
      int int0 = lambdaMap0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      LambdaSet<String> lambdaSet0 = lambdaMap0.keySet();
      assertNotNull(lambdaSet0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      Integer integer0 = new Integer(17);
      LambdaMap<Object, Integer> lambdaMap0 = new LambdaMap<Object, Integer>(hashMap0);
      boolean boolean0 = lambdaMap0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>(hashMap0);
      LambdaSet<Map.Entry<String, String>> lambdaSet0 = (LambdaSet<Map.Entry<String, String>>)lambdaMap0.entrySet();
      assertNotNull(lambdaSet0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      LambdaMap<Integer, String> lambdaMap0 = new LambdaMap<Integer, String>(hashMap0);
      Integer integer0 = new Integer(1);
      hashMap0.put(integer0, "P6)BZ,");
      LambdaMap<Integer, String> lambdaMap1 = lambdaMap0.clone((Map<Integer, String>) lambdaMap0);
      assertNotSame(lambdaMap0, lambdaMap1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      LambdaMap<Object, Integer> lambdaMap0 = new LambdaMap<Object, Integer>(hashMap0);
      LambdaMap<Object, Integer> lambdaMap1 = lambdaMap0.clone();
      assertTrue(lambdaMap1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      LambdaMap<Integer, String> lambdaMap0 = new LambdaMap<Integer, String>(hashMap0);
      Integer integer0 = new Integer(1);
      hashMap0.put(integer0, "P6)BZ,");
      LambdaMap<Integer, String> lambdaMap1 = lambdaMap0.clone();
      assertNotSame(lambdaMap0, lambdaMap1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>((Map<? extends String, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>((Map<? extends String, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.put(", ", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LambdaMap<Integer, Object> lambdaMap0 = new LambdaMap<Integer, Object>((Map<? extends Integer, ?>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LambdaMap<Object, String> lambdaMap0 = new LambdaMap<Object, String>((Map<?, ? extends String>) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        lambdaMap0.get(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LambdaMap<Object, Integer> lambdaMap0 = new LambdaMap<Object, Integer>((Map<?, ? extends Integer>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.convertValues((Converter<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.Lambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>((Map<? extends String, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.containsValue("ch.lambdaj.collection.LambdaMap");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>((Map<?, ?>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.clone((Map<Object, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      boolean boolean0 = lambdaMap0.containsKey("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      hashMap0.put("N($_Y6WceK}1kQi%", "N($_Y6WceK}1kQi%");
      // Undeclared exception!
      try { 
        lambdaMap0.retainKeys((Matcher<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>(hashMap0);
      hashMap0.put("jn8cPkby0#b", ", ");
      // Undeclared exception!
      try { 
        lambdaMap0.retainValues((Matcher<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>((Map<? extends String, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.putAll(lambdaMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      // Undeclared exception!
      try { 
        lambdaMap0.convertValues((Object) lambdaMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // ch/lambdaj/proxy/InvocationInterceptor
         //
         verifyException("ch.lambdaj.function.convert.ArgumentConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LambdaMap<Object, String> lambdaMap0 = new LambdaMap<Object, String>((Map<?, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LambdaMap<Integer, String> lambdaMap0 = new LambdaMap<Integer, String>((Map<? extends Integer, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.values();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<String, Object> lambdaMap0 = new LambdaMap<String, Object>(hashMap0);
      // Undeclared exception!
      try { 
        lambdaMap0.removeValues((Matcher<?>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hamcrest/Matchers
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      LambdaMap<Object, Object> lambdaMap1 = lambdaMap0.retainValues((Matcher<?>) null);
      assertSame(lambdaMap1, lambdaMap0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      LambdaMap<Object, Object> lambdaMap1 = lambdaMap0.retainKeys((Matcher<?>) null);
      assertTrue(lambdaMap1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      String string0 = lambdaMap0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>((Map<?, ?>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      LambdaMap<Object, Object> lambdaMap1 = lambdaMap0.clone((Map<Object, Object>) lambdaMap0);
      assertNotSame(lambdaMap0, lambdaMap1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LambdaMap<Integer, Object> lambdaMap0 = new LambdaMap<Integer, Object>((Map<? extends Integer, ?>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      PropertyExtractor<Object, Object> propertyExtractor0 = new PropertyExtractor<Object, Object>("");
      LambdaMap<Object, Object> lambdaMap1 = lambdaMap0.convertValues((Converter<Object, Object>) propertyExtractor0);
      assertEquals(0, lambdaMap1.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<String, Object> lambdaMap0 = new LambdaMap<String, Object>(hashMap0);
      // Undeclared exception!
      try { 
        lambdaMap0.removeKeys((Matcher<?>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hamcrest/Matchers
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      lambdaMap0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>(hashMap0);
      Integer integer0 = new Integer((-2));
      Object object0 = lambdaMap0.remove((Object) integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      LambdaMap<String, Integer> lambdaMap0 = new LambdaMap<String, Integer>(hashMap0);
      int int0 = lambdaMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LambdaMap<String, String> lambdaMap0 = new LambdaMap<String, String>((Map<? extends String, ? extends String>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.equals(lambdaMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LambdaMap<Object, Object> lambdaMap0 = new LambdaMap<Object, Object>((Map<?, ?>) null);
      // Undeclared exception!
      try { 
        lambdaMap0.entrySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaMap", e);
      }
  }
}
