/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 15:22:25 GMT 2020
 */

package ch.lambdaj.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.lambdaj.collection.LambdaSet;
import java.util.ArrayDeque;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Matcher;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LambdaSet_ESTest extends LambdaSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashSet<Locale.FilteringMode> hashSet0 = new HashSet<Locale.FilteringMode>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      hashSet0.add(locale_FilteringMode0);
      LambdaSet<Locale.FilteringMode> lambdaSet0 = new LambdaSet<Locale.FilteringMode>(hashSet0);
      LambdaSet<Object> lambdaSet1 = new LambdaSet<Object>(lambdaSet0);
      // Undeclared exception!
      try { 
        lambdaSet1.retain((Matcher<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.Lambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LambdaSet<String> lambdaSet0 = new LambdaSet<String>(set0);
      // Undeclared exception!
      try { 
        lambdaSet0.clone((Set<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.AbstractLambdaCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
      LambdaSet<Object> lambdaSet0 = new LambdaSet<Object>(linkedHashSet0);
      lambdaSet0.add(linkedHashSet0);
      // Undeclared exception!
      try { 
        lambdaSet0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaSet<String> lambdaSet0 = new LambdaSet<String>(treeSet0);
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      lambdaSet0.innerIterable = (Iterable<? extends String>) arrayDeque0;
      // Undeclared exception!
      try { 
        lambdaSet0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.ArrayDeque cannot be cast to java.util.Set
         //
         verifyException("ch.lambdaj.collection.LambdaSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LambdaSet<String> lambdaSet0 = null;
      try {
        lambdaSet0 = new LambdaSet<String>((Set<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.AbstractLambdaCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LambdaSet<String> lambdaSet0 = new LambdaSet<String>(set0);
      LambdaSet<String> lambdaSet1 = lambdaSet0.clone(set0);
      assertNotSame(lambdaSet1, lambdaSet0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LambdaSet<String> lambdaSet0 = new LambdaSet<String>(set0);
      // Undeclared exception!
      try { 
        lambdaSet0.remove((Matcher<?>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hamcrest/Matchers
         //
         verifyException("ch.lambdaj.collection.LambdaIterable", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashSet<Locale.FilteringMode> hashSet0 = new HashSet<Locale.FilteringMode>();
      LambdaSet<Locale.FilteringMode> lambdaSet0 = new LambdaSet<Locale.FilteringMode>(hashSet0);
      LambdaSet<Object> lambdaSet1 = new LambdaSet<Object>(lambdaSet0);
      LambdaSet<Object> lambdaSet2 = lambdaSet1.clone();
      assertNotSame(lambdaSet2, lambdaSet1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HashSet<Locale.FilteringMode> hashSet0 = new HashSet<Locale.FilteringMode>();
      LambdaSet<Locale.FilteringMode> lambdaSet0 = new LambdaSet<Locale.FilteringMode>(hashSet0);
      LambdaSet<Object> lambdaSet1 = new LambdaSet<Object>(lambdaSet0);
      LambdaSet<Object> lambdaSet2 = lambdaSet1.retain((Matcher<?>) null);
      assertSame(lambdaSet1, lambdaSet2);
  }
}
