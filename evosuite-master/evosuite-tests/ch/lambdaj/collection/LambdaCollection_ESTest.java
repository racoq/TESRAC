/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 15:40:13 GMT 2020
 */

package ch.lambdaj.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.lambdaj.collection.LambdaCollection;
import ch.lambdaj.collection.LambdaSet;
import ch.lambdaj.function.argument.Argument;
import ch.lambdaj.function.convert.ArgumentConverter;
import ch.lambdaj.function.convert.Converter;
import ch.lambdaj.function.convert.DefaultStringConverter;
import ch.lambdaj.function.convert.PropertyExtractor;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NavigableSet;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Matcher;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LambdaCollection_ESTest extends LambdaCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      LambdaSet<Locale.FilteringMode> lambdaSet0 = lambdaCollection0.distinct();
      Integer[] integerArray0 = new Integer[0];
      Integer[] integerArray1 = lambdaSet0.toArray(integerArray0);
      assertSame(integerArray1, integerArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      lambdaCollection0.add(locale_FilteringMode0);
      LambdaCollection<Object> lambdaCollection1 = new LambdaCollection<Object>(treeSet0);
      Object[] objectArray0 = lambdaCollection1.toArray();
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      arrayList0.add("&KX#OYr'#6");
      int int0 = lambdaCollection0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(treeSet0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "sk-SP}GrZ/})*`1,h?=";
      stringArray0[2] = "";
      stringArray0[3] = "cii4";
      stringArray0[4] = ",Wu";
      stringArray0[5] = "";
      stringArray0[6] = "Qs0uy$2FTY!1*";
      stringArray0[7] = "0(!?dB}R";
      stringArray0[8] = "[WXe){r+v/f3]S";
      LambdaCollection<String> lambdaCollection1 = lambdaCollection0.append(stringArray0);
      HashSet<Object> hashSet0 = new HashSet<Object>();
      boolean boolean0 = lambdaCollection1.retainAll(hashSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      EnumSet<Locale.FilteringMode> enumSet0 = EnumSet.of(locale_FilteringMode0, locale_FilteringMode0, locale_FilteringMode0, locale_FilteringMode0, locale_FilteringMode0);
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(enumSet0);
      boolean boolean0 = lambdaCollection0.remove((Object) locale_FilteringMode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(vector0);
      Class<String> class0 = String.class;
      LambdaCollection<String> lambdaCollection1 = lambdaCollection0.project(class0, (Object[]) null);
      assertTrue(lambdaCollection1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(stack0);
      Integer integer0 = new Integer(7);
      stack0.add(integer0);
      Class<Object> class0 = Object.class;
      LambdaCollection<Object> lambdaCollection1 = lambdaCollection0.project(class0, (Object[]) null);
      assertNotSame(lambdaCollection1, lambdaCollection0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      lambdaCollection0.add(locale_FilteringMode0);
      LambdaCollection<Object> lambdaCollection1 = new LambdaCollection<Object>(treeSet0);
      DefaultStringConverter defaultStringConverter0 = new DefaultStringConverter();
      LambdaCollection<String> lambdaCollection2 = lambdaCollection1.convert((Converter<Object, String>) defaultStringConverter0);
      assertFalse(lambdaCollection2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(stack0);
      Integer integer0 = new Integer(7);
      stack0.add(integer0);
      LambdaCollection<Object> lambdaCollection1 = lambdaCollection0.clone();
      assertNotSame(lambdaCollection0, lambdaCollection1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LambdaCollection<Integer> lambdaCollection0 = new LambdaCollection<Integer>(linkedHashSet0);
      Integer[] integerArray0 = new Integer[0];
      LambdaCollection<Integer> lambdaCollection1 = lambdaCollection0.append(integerArray0);
      assertSame(lambdaCollection1, lambdaCollection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Locale.FilteringMode> linkedList0 = new LinkedList<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(linkedList0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      lambdaCollection0.add(locale_FilteringMode0);
      boolean boolean0 = lambdaCollection0.addAll(linkedList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      lambdaCollection0.add(locale_FilteringMode0);
      boolean boolean0 = lambdaCollection0.add(locale_FilteringMode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(arrayDeque0);
      // Undeclared exception!
      try { 
        lambdaCollection0.toArray((Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Integer integer0 = new Integer((-32));
      NavigableSet<Object> navigableSet0 = treeSet0.headSet((Object) integer0, true);
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(navigableSet0);
      treeSet0.add("");
      Integer[] integerArray0 = new Integer[7];
      // Undeclared exception!
      try { 
        lambdaCollection0.toArray(integerArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      LambdaCollection<Integer> lambdaCollection0 = new LambdaCollection<Integer>(vector0);
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        lambdaCollection0.toArray(stringArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Integer integer0 = new Integer((-32));
      NavigableSet<Object> navigableSet0 = treeSet0.headSet((Object) integer0, true);
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(navigableSet0);
      treeSet0.add("");
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        lambdaCollection0.toArray(class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.sort((Object) treeSet0, 3640);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown comparator option: 3640
         //
         verifyException("ch.lambdaj.function.compare.ComparatorUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag(";<ygEHbbrs)^&Gey{");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(set0);
      // Undeclared exception!
      try { 
        lambdaCollection0.retainAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      treeSet0.add(locale_FilteringMode0);
      // Undeclared exception!
      try { 
        lambdaCollection0.retain((Matcher<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.Lambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      LambdaSet<Locale.FilteringMode> lambdaSet0 = lambdaCollection0.distinct();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      lambdaSet0.add(locale_FilteringMode0);
      // Undeclared exception!
      try { 
        lambdaSet0.replace((Matcher<?>) null, locale_FilteringMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.LambdaIterable", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.remove((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(treeSet0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "sk-SP}GrZ/})*`1,h?=";
      stringArray0[2] = "";
      stringArray0[3] = "cii4";
      stringArray0[4] = ",Wu";
      stringArray0[5] = "";
      stringArray0[6] = "Qs0uy$2FTY!1*";
      stringArray0[7] = "0(!?dB}R";
      stringArray0[8] = "[WXe){r+v/f3]S";
      LambdaCollection<String> lambdaCollection1 = lambdaCollection0.append(stringArray0);
      Integer integer0 = new Integer(46);
      // Undeclared exception!
      try { 
        lambdaCollection1.remove((Object) integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>(0);
      Integer integer0 = new Integer((-490));
      arrayList0.add(integer0);
      LambdaCollection<Integer> lambdaCollection0 = new LambdaCollection<Integer>(arrayList0);
      PropertyExtractor<Integer, Integer> propertyExtractor0 = new PropertyExtractor<Integer, Integer>("A");
      // Undeclared exception!
      try { 
        lambdaCollection0.convert((Converter<Integer, Integer>) propertyExtractor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoSuchMethodException: java.lang.Integer.A()
         //
         verifyException("ch.lambdaj.util.IntrospectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      String[] stringArray0 = new String[10];
      LambdaCollection<String> lambdaCollection1 = lambdaCollection0.append(stringArray0);
      LambdaCollection<Object> lambdaCollection2 = new LambdaCollection<Object>(lambdaCollection1);
      // Undeclared exception!
      try { 
        lambdaCollection2.convert((Converter<Object, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.function.convert.ConverterIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Integer integer0 = new Integer((-32));
      NavigableSet<Object> navigableSet0 = treeSet0.headSet((Object) integer0, true);
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(navigableSet0);
      treeSet0.add("");
      ArgumentConverter<Object, Object> argumentConverter0 = new ArgumentConverter<Object, Object>((Argument<Object>) null);
      // Undeclared exception!
      try { 
        lambdaCollection0.convert((Converter<Object, Object>) argumentConverter0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.containsAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Integer integer0 = new Integer((-32));
      NavigableSet<Object> navigableSet0 = treeSet0.headSet((Object) integer0, true);
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(navigableSet0);
      treeSet0.add("");
      // Undeclared exception!
      try { 
        lambdaCollection0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(linkedHashSet0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) lambdaCollection0;
      objectArray0[2] = (Object) linkedHashSet0;
      objectArray0[3] = (Object) linkedHashSet0;
      // Undeclared exception!
      lambdaCollection0.append(objectArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(set0);
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        lambdaCollection0.append(objectArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(stack0);
      // Undeclared exception!
      try { 
        lambdaCollection0.append((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) lambdaCollection0;
      // Undeclared exception!
      try { 
        lambdaCollection0.append(objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.addAll((Collection<? extends Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        lambdaCollection0.add(class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = null;
      try {
        lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>((Collection<? extends Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.lambdaj.collection.AbstractLambdaCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      treeSet0.add(locale_FilteringMode0);
      Integer integer0 = new Integer((-32));
      NavigableSet<Object> navigableSet0 = treeSet0.headSet((Object) integer0, true);
      LambdaCollection<Object> lambdaCollection0 = null;
      try {
        lambdaCollection0 = new LambdaCollection<Object>(navigableSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Enum
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      String[] stringArray0 = new String[9];
      lambdaCollection0.append(stringArray0);
      boolean boolean0 = lambdaCollection0.contains(stringArray0[6]);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<Locale.FilteringMode> linkedList0 = new LinkedList<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(linkedList0);
      boolean boolean0 = lambdaCollection0.addAll(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      int int0 = lambdaCollection0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      boolean boolean0 = lambdaCollection0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      boolean boolean0 = lambdaCollection0.containsAll(lambdaCollection0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      LambdaCollection<String> lambdaCollection1 = lambdaCollection0.clone();
      lambdaCollection1.add("($_a@ML28KVdV{n8h");
      boolean boolean0 = lambdaCollection0.containsAll(lambdaCollection1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      boolean boolean0 = lambdaCollection0.contains("ut");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      arrayDeque0.add(locale_FilteringMode0);
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = lambdaCollection0.toArray(class0);
      assertEquals(1, locale_FilteringModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = lambdaCollection0.toArray(class0);
      assertEquals(0, locale_FilteringModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.remove((Matcher<?>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/hamcrest/Matchers
         //
         verifyException("ch.lambdaj.collection.LambdaIterable", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      LambdaCollection<Object> lambdaCollection1 = lambdaCollection0.retain((Matcher<?>) null);
      assertTrue(lambdaCollection1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      Object[] objectArray0 = lambdaCollection0.toArray();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      lambdaCollection0.add(locale_FilteringMode0);
      boolean boolean0 = lambdaCollection0.removeAll(lambdaCollection0);
      assertFalse(treeSet0.contains(locale_FilteringMode0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      LambdaSet<Locale.FilteringMode> lambdaSet0 = lambdaCollection0.distinct();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LambdaCollection<Locale.FilteringMode> lambdaCollection1 = lambdaSet0.replace((Matcher<?>) null, locale_FilteringMode0);
      assertTrue(lambdaCollection1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      boolean boolean0 = lambdaCollection0.retainAll(treeSet0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(treeSet0);
      boolean boolean0 = lambdaCollection0.removeAll(lambdaCollection0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(linkedList0);
      // Undeclared exception!
      try { 
        lambdaCollection0.sort((Object) linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // ch/lambdaj/proxy/InvocationInterceptor
         //
         verifyException("ch.lambdaj.function.compare.ArgumentComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(treeSet0);
      lambdaCollection0.clear();
      assertTrue(lambdaCollection0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        lambdaCollection0.project(class0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to find a constructor of java.lang.Object compatible with the given arguments
         //
         verifyException("ch.lambdaj.function.convert.ConstructorArgumentConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(treeSet0);
      LambdaCollection<String> lambdaCollection1 = new LambdaCollection<String>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection1.distinct((Object) lambdaCollection0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // ch/lambdaj/proxy/InvocationInterceptor
         //
         verifyException("ch.lambdaj.function.compare.ArgumentComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      String[] stringArray0 = new String[8];
      String[] stringArray1 = lambdaCollection0.toArray(stringArray0);
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(arrayList0);
      assertTrue(lambdaCollection0.isEmpty());
      
      String[] stringArray0 = new String[10];
      lambdaCollection0.append(stringArray0);
      boolean boolean0 = lambdaCollection0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LambdaCollection<String> lambdaCollection0 = new LambdaCollection<String>(treeSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.sort((Object) "Qs0uy$2FTY!1*", 1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // ch/lambdaj/proxy/InvocationInterceptor
         //
         verifyException("ch.lambdaj.function.compare.ArgumentComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HashSet<Object> hashSet0 = new HashSet<Object>();
      LambdaCollection<Object> lambdaCollection0 = new LambdaCollection<Object>(hashSet0);
      // Undeclared exception!
      try { 
        lambdaCollection0.extract((Object) hashSet0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // ch/lambdaj/proxy/InvocationInterceptor
         //
         verifyException("ch.lambdaj.function.convert.ArgumentConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      boolean boolean0 = lambdaCollection0.remove((Object) "p");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      LambdaCollection<Locale.FilteringMode> lambdaCollection0 = new LambdaCollection<Locale.FilteringMode>(arrayDeque0);
      PropertyExtractor<Locale.FilteringMode, Locale.FilteringMode> propertyExtractor0 = new PropertyExtractor<Locale.FilteringMode, Locale.FilteringMode>("");
      LambdaCollection<Locale.FilteringMode> lambdaCollection1 = lambdaCollection0.convert((Converter<Locale.FilteringMode, Locale.FilteringMode>) propertyExtractor0);
      assertNotSame(lambdaCollection1, lambdaCollection0);
  }
}
